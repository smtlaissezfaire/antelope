module Antelope
  module Parser
    grammar GrammarRule
      include Tokens

      rule grammar_rule
        rule_name:ID SP* "->" SP* rule_body DELIMITER <Instantiators::Rule>
      end

      rule rule_body
        expression
      end

      rule expression
        choice / sequence / node
      end

      rule choice
        node SP+ "|" SP+ expression <Instantiators::Choice>
      end

      rule sequence
        node SP+ expression <Instantiators::Sequence>
      end

      rule node
        atom suffix? <Instantiators::Node>
      end

      rule suffix
        repetition / kleen_star / optional_expression
      end

      rule repetition
        PLUS
      end

      rule kleen_star
        STAR
      end

      rule optional_expression
        QUESTION_MARK
      end

      rule atom
        terminal / non_terminal / parenthesized_expression
      end

      rule parenthesized_expression
        OPEN_PAREN SP* expression SP* CLOSE_PAREN
      end

      rule non_terminal
        ID <Instantiators::NonTerminal>
      end

      rule terminal
        regex / literal
      end

      rule regex
        REGEX_DELIMITER
        text:((!REGEX_DELIMITER (ESCAPED_REGEX_DELIMITER / .))*)
        REGEX_DELIMITER <Instantiators::Regex>
      end

      rule literal
        single_quoted_literal / double_quoted_literal
      end

      rule single_quoted_literal
        SINGLE_QUOTE text:((!SINGLE_QUOTE .)*) SINGLE_QUOTE <Instantiators::Literal>
      end

      rule double_quoted_literal
        DOUBLE_QUOTE text:((!DOUBLE_QUOTE .)*) DOUBLE_QUOTE <Instantiators::Literal>
      end
    end
  end
end
