### Generated by rprotoc. DO NOT EDIT!
### <proto file: protocol_buffer.proto>
# package antelope.compiler;
# 
# message ProtocolBuffer {
#   enum ProductionTypes {
#     RULE                = 1;
#     LITERAL             = 2;
#     ALTERNATION         = 3;
#     GROUPED_EXPRESSION  = 4;
#     OPTIONAL_EXPRESSION = 5;
#     OPTIONAL_REPETITION = 6;
#     REPETITION          = 7;
#   }
# 
#   message Production {
#     required ProductionTypes type         = 1;
#     repeated int32           identifiers  = 2;
#     optional string          text         = 3;
#   }
# 
#   message Rule {
#     required int32      identifier   = 1;
#     required string     name         = 2;
#     repeated Production productions  = 3;
#   }
# 
#   message Grammar {
#     required string name            = 1;
#     required string start_rule_name = 2;
#     repeated Rule   rules           = 3;
#   }
# 
#   required Grammar grammar = 1;
# }
require 'protobuf/message/message'
require 'protobuf/message/enum'
require 'protobuf/message/service'
require 'protobuf/message/extend'

module Antelope
  module Compiler
    class ProtocolBuffer < ::Protobuf::Message
      defined_in __FILE__
      class ProductionTypes < ::Protobuf::Enum
        defined_in __FILE__
        RULE = 1
        LITERAL = 2
        ALTERNATION = 3
        GROUPED_EXPRESSION = 4
        OPTIONAL_EXPRESSION = 5
        OPTIONAL_REPETITION = 6
        REPETITION = 7
      end
      class Production < ::Protobuf::Message
        defined_in __FILE__
        required :ProductionTypes, :type, 1
        repeated :int32, :identifiers, 2
        optional :string, :text, 3
      end
      class Rule < ::Protobuf::Message
        defined_in __FILE__
        required :int32, :identifier, 1
        required :string, :name, 2
        repeated :Production, :productions, 3
      end
      class Grammar < ::Protobuf::Message
        defined_in __FILE__
        required :string, :name, 1
        required :string, :start_rule_name, 2
        repeated :Rule, :rules, 3
      end
      required :Grammar, :grammar, 1
    end
  end
end